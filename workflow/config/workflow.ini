input_file_1=${workflow_bundle_dir}/Workflow_Bundle_${workflow-directory-name}/${version}/data/testData/test.genome.read1.fastq.gz
input_file_2=${workflow_bundle_dir}/Workflow_Bundle_${workflow-directory-name}/${version}/data/testData/test.genome.read2.fastq.gz
input_reference=${workflow_bundle_dir}/Workflow_Bundle_${workflow-directory-name}/${version}/data/reference/bwa-0.7.9/hg19_random.fa

output_dir=seqware-results
output_prefix=./
data_dir=data
tmp_dir=tmp

bundled_seqware=seqware-distribution-${seqware-version}-full.jar
bundled_jre=jre${jre-version}

# If outputFileName is not provided, it will be created using IUS accession, library, run name, barcode, and lane
#outputFileName=
ius_accession=12345
rg_library=library
sequencer_run_name=121005_h804_0096_AD0V4NACXX
barcode=NoIndex
lane=5

manual_output=false

# cutadapt params
#cutadapt=cutadapt-${cutadapt-version}/bin/cutadapt
do_trim=true
trim_mem_mb=16384
trim_min_quality=20
trim_min_length=10
cutadapt_r1_other_params=
cutadapt_r2_other_params=
r1_adapter_trim=AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCG
r2_adapter_trim=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT

#Sorry to non-OICR folks, but I was falling down a rabbit hole of required dependencies
#python=${workflow_bundle_dir}/Workflow_Bundle_${project.artifactId}/${version}/bin/python${python-version}/usr/local/bin/python${python-version}
python=/oicr/local/sw/Python-2.7.2/bin/python2.7
#cutadapt=${workflow_bundle_dir}/Workflow_Bundle_${project.artifactId}/${version}/bin/cutadapt-${cutadapt-version}/bin/cutadapt
cutadapt=/oicr/local/analysis/sw/cutadapt/cutadapt-1.3/bin/cutadapt

# bwa mem params
bwa=bwa.kit-${bwa-version}/bwa
bwa_mem_mb=16384
bwa_threads=8
bwa_other_params=

# read group header data
rg_library=library
rg_platform=illumina
rg_platform_unit=flowcell-barcode_lane
rg_sample_name=sample

# picard params
picardsort=picard-tools-${picard-version}/SortSam.jar
picard_memory=3072

# samtools index params
samtools=samtools-${samtools-version}/samtools
index_mem_mb=16384
